<html>
<head>
    <meta http-equiv="Pragma" content="no-cache">
    <meta charset="utf-8"/>
    <meta name="viewport"
          content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi"/>
    <meta name="apple-mobile-web-app-capable" content="yes"/>
    <meta name="apple-mobile-web-app-status-bar-style" content="black"/>

    <!-- keep forms.css before tailwind, otherwise opacity etc. will not work correctly -->
    <link href="/assets/css/gotrino.css" rel="stylesheet">
    <link href="/assets/css/tailwind.min.css" rel="stylesheet"> <!-- version 2.0.1 -->

    <script src="wasm_exec.js?v={{.WasmBridgeVersion}}"></script>
    {{if .HotReload}}
        <script>
            function longPoll() {
                fetch("api/v1/poll/version")
                    .then(res => {
                        if (res.status == 200) {
                            document.location.reload(true)
                        }

                        setTimeout(longPoll, 100);
                    }).catch(err => {
                    setTimeout(longPoll, 1000);
                    throw err;
                });
            }

            longPoll();
        </script>
    {{end}}

    {{if .LoadWasm}}
        <script>
            const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);

            const go = new Go();

            if (isSafari) {
                fetch('app.wasm?v={{.WasmVersion}}').then(response =>
                    response.arrayBuffer()
                ).then(bytes =>
                    WebAssembly.instantiate(bytes, go.importObject)
                ).then(result =>
                    go.run(result.instance)
                );
            } else {
                WebAssembly.instantiateStreaming(fetch("app.wasm"), go.importObject).then((result) => {
                    go.run(result.instance);
                });
            }
        </script>
    {{end}}

</head>
<body>{{- .Body -}}</body>
</html>